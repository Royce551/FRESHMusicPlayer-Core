<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FRESHMusicPlayer.Core</name>
    </assembly>
    <members>
        <member name="P:FRESHMusicPlayer.Player.CurrentBackend">
            <summary>
            The current backend the Player is using for audio playback
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.Player.CurrentTime">
            <summary>
            The current playback position./>
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.Player.TotalTime">
            <summary>
            The total length of the current track.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.Player.AvoidNextQueue">
            <summary>
            If true, suppresses an internal event handler. I honestly don't understand how this thing works; just make sure to keep
            setting this to false, or things will explode.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.Player.Volume">
            <summary>
            The current volume, from 0 to 1.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.Player.FilePath">
            <summary>
            The current path the Player is playing. Keep in mind that this may not necessarily be a file. For example, it could be the
            URL to a network stream.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.Player.FileLoaded">
            <summary>
            Whether the audio backend and file has been loaded and things are ready to go. If you interact with the Player when this is false everything
            will explode.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.Player.Paused">
            <summary>
            Whether the Player is paused.
            </summary>
        </member>
        <member name="E:FRESHMusicPlayer.Player.SongChanged">
            <summary>
            Raised whenever a new track is being played.
            </summary>
        </member>
        <member name="E:FRESHMusicPlayer.Player.SongStopped">
            <summary>
            Raised whenever the player is stopping.
            </summary>
        </member>
        <member name="E:FRESHMusicPlayer.Player.SongException">
            <summary>
            Raised whenever an exception is thrown while the Player is loading a file.
            </summary>
        </member>
        <member name="M:FRESHMusicPlayer.Player.PreviousAsync">
            <summary>
            Skips to the previous track in the Queue. If there are no tracks for the player to go back to, nothing will happen.
            </summary>
        </member>
        <member name="M:FRESHMusicPlayer.Player.NextAsync(System.Boolean)">
            <summary>
            Skips to the next track in the Queue. If there are no more tracks, the player will stop.
            </summary>
            <param name="avoidNext">Intended to be used only by the player</param>
        </member>
        <member name="M:FRESHMusicPlayer.Player.PlayAsync(System.String)">
            <summary>
            Plays a track. This is equivalent to calling Queue.Add() and then PlayMusic()./>
            </summary>
            <param name="path">The track to play</param>
        </member>
        <member name="M:FRESHMusicPlayer.Player.PlayAsync(System.Boolean,System.Boolean)">
            <summary>
            Starts playing the Queue. In order to play a track, you must first add it to the Queue using <see cref="!:AddQueue(string)"/>.
            </summary>
            <param name="repeat">If true, avoids dequeuing the next track. Not to be used for anything other than the player.</param>
        </member>
        <member name="M:FRESHMusicPlayer.Player.Stop">
            <summary>
            Completely stops and disposes the player and resets all playback related variables to their defaults.
            </summary>
        </member>
        <member name="M:FRESHMusicPlayer.Player.Pause">
            <summary>
            Pauses playback without disposing. Can later be resumed with <see cref="!:ResumeMusic()"/>.
            </summary>
        </member>
        <member name="M:FRESHMusicPlayer.Player.Resume">
            <summary>
            Resumes playback.
            </summary>
        </member>
        <member name="T:FRESHMusicPlayer.PlayQueue">
            <summary>
            Represents the player's queue.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.PlayQueue.Queue">
            <summary>
            Gets or sets the current queue. This is settable for situations where there's no method for what you want to do.
            Use the methods in this class for managing the queue so that events can fire and stuff doesn't break in the future.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.PlayQueue.Shuffle">
            <summary>
            Gets or sets whether the queue should be shuffled.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.PlayQueue.RepeatMode">
            <summary>
            Gets or sets the current repeat mode.
            </summary>
        </member>
        <member name="P:FRESHMusicPlayer.PlayQueue.Position">
            <summary>
            Gets or sets the index in the queue of the track that the Player is going to play *next*.
            </summary>
        </member>
        <member name="E:FRESHMusicPlayer.PlayQueue.QueueChanged">
            <summary>
            Fired when the queue changes.
            </summary>
        </member>
        <member name="M:FRESHMusicPlayer.PlayQueue.Add(System.String)">
            <summary>
            Adds a track to the queue.
            </summary>
            <param name="filePath">The track to add</param>
        </member>
        <member name="M:FRESHMusicPlayer.PlayQueue.Add(System.String[])">
            <summary>
            Adds multiple tracks to the queue.
            </summary>
            <param name="filePaths">The tracks to add.</param>
        </member>
        <member name="M:FRESHMusicPlayer.PlayQueue.Clear">
            <summary>
            Clears the queue.
            </summary>
        </member>
        <member name="M:FRESHMusicPlayer.PlayQueue.ManualShuffle">
            <summary>
            Shuffles the queue. If <see cref="P:FRESHMusicPlayer.PlayQueue.Shuffle"/> isn't true, this will not do anything.
            </summary>
        </member>
        <member name="M:FRESHMusicPlayer.PlayQueue.Remove(System.Int32)">
            <summary>
            Removes a track from the queue.
            </summary>
            <param name="index">The index of the track you want to remove.</param>
        </member>
        <member name="T:FRESHMusicPlayer.RepeatMode">
            <summary>
            The way that the queue will be repeated
            </summary>
        </member>
        <member name="F:FRESHMusicPlayer.RepeatMode.None">
            <summary>
            Do not repeat tracks in the queue
            </summary>
        </member>
        <member name="F:FRESHMusicPlayer.RepeatMode.RepeatOne">
            <summary>
            Repeat the currently playing track
            </summary>
        </member>
        <member name="F:FRESHMusicPlayer.RepeatMode.RepeatAll">
            <summary>
            Repeat the entire queue
            </summary>
        </member>
    </members>
</doc>
